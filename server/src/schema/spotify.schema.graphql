type Query {
  search(searchString: String): SearchResults
  likeStatus(trackId: ID): Boolean
}

type Mutation {
  savePlaylist(input: SavePlaylistInput!): SavePlaylistResponse
  toggleLike(input: ToggleLikeInput!): ToggleResponse
}

type SearchResults {
  searchResultsArray: [Track]
  recommendationsArray: [Track]
}

type SavePlaylistResponse {
  status: Int
  message: String
  playlistName: String
  playlistTracks: [Track]
  searchResults: [Track]
}

type ToggleResponse {
  status: Int
  message: String
  is_like: Boolean
}

type Track {
  id: String
  name: String
  artist: String
  album: String
  cover: String
  uri: String
  preview: String
}

input SavePlaylistInput {
  playlistName: String!
  trackURIs: [String]!
}

input ToggleLikeInput {
  trackId: ID!
  isLike: Boolean!
}
